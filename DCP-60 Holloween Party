#include <bits/stdc++.h>

using namespace std;
#define INF 10000
string arr[1001];
//int visited[1001][1001];
long int dist[1001][1001];
int rot[3]={1,-1,0};
int r,c;
pair<int,int> pii;

int in_range(int x,int y){
    if(x>=0 && x<r && y>=0 && y<c)
        return 1;
    return 0;
}

int bfs(int srcx,int srcy,int dstx,int dsty){
    pii.first=srcx;
    pii.second=srcy;
    dist[srcx][srcy]=0;
    deque< pair<int,int> > Q;
    Q.push_back(pii);
    while(!Q.empty()){
        int x,y;
        x=Q.front().first;
        y=Q.front().second;
        Q.pop_front();
        for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
                if(abs(rot[i]) != abs(rot[j])){
                    int f1,f2;
                    f1=x+rot[i];
                    f2=y+rot[j];
                    if(in_range(f1,f2)){
                        pii.first=f1;
                        pii.second=f2;
                        if(arr[f1][f2]==arr[x][y] && dist[x][y]<dist[f1][f2]){
                            dist[f1][f2]=dist[x][y];
                            Q.push_front(pii);
                        }
                        else if(arr[f1][f2]!=arr[x][y] && dist[x][y]+1 < dist[f1][f2]){
                            Q.push_back(pii);
                            dist[f1][f2]=dist[x][y]+1;
                        }
                    }
                }
            }
        }
    }
    return dist[dstx][dsty];
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    //cout << "Hello world!" << endl;
    int t;
    cin>>t;
    int cases=1;
    while(t--){
        memset(dist,INF,sizeof(dist));
        cin>>r>>c;
        for(int i=0;i<r;i++){
            string s;
            cin>>s;
            arr[i]=s;
        }
        int ans=bfs(0,0,r-1,c-1);
        /*for(int i=0;i<r;i++){
        	for(int j=0;j<c;j++)
        		cout<<dist[i][j]<<" ";
        	cout<<endl;
        }*/
        cout<<"Case "<<cases<<": "<<ans<<"\n";
        cases++;
    }
    return 0;
}
